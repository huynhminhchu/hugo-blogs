[{"authors":[],"categories":[],"content":"Spring boot.\nContent.\n","date":"May 13, 2023","img":"","lang":"en","langName":"English","largeImg":"","permalink":"/hugo-theme-bootstrap-skeleton/posts/spring-boot/","series":[],"smallImg":"","tags":[],"timestamp":1683956949,"title":"Spring Boot"},{"authors":[],"categories":[{"title":"linux","url":"/hugo-theme-bootstrap-skeleton/categories/linux/"}],"content":"Summary.\nPreparing the Host System Hardware: CPU 4 cores RAM 16GB RAM OS: Ubuntu Server 18.04.6 LTS Software: bash\u0026gt;=3.2 binutils\u0026gt;=2.13.1 bison\u0026gt;=2.7 coreutils\u0026gt;=6.9 diffutils\u0026gt;=2.8.1 findutils\u0026gt;=4.2.31 gawk\u0026gt;=4.0.1 gcc\u0026gt;=5.1 grep\u0026gt;=2.5.1 gzip\u0026gt;=1.3.12 linux-kernel\u0026gt;=3.2 m4\u0026gt;=1.4.10 make\u0026gt;=4.0 patch\u0026gt;=2.5.4 perl\u0026gt;=5.8.8 python\u0026gt;=3.4 sed\u0026gt;=4.1.5 tar\u0026gt;=1.22 texinfo\u0026gt;=4.7 xz\u0026gt;=5.0.0 Run the following script to see whether the host system has all the appropriate packages #!/bin/bash # Simple script to list version numbers of critical development tools export LC_ALL=C bash --version | head -n1 | cut -d\u0026#34; \u0026#34; -f2-4 MYSH=$(readlink -f /bin/sh) echo \u0026#34;/bin/sh -\u0026gt; $MYSH\u0026#34; echo $MYSH | grep -q bash || echo \u0026#34;ERROR: /bin/sh does not point to bash\u0026#34; unset MYSH echo -n \u0026#34;Binutils: \u0026#34;; ld --version | head -n1 | cut -d\u0026#34; \u0026#34; -f3- bison --version | head -n1 if [ -h /usr/bin/yacc ]; then echo \u0026#34;/usr/bin/yacc -\u0026gt; `readlink -f /usr/bin/yacc`\u0026#34;; elif [ -x /usr/bin/yacc ]; then echo yacc is `/usr/bin/yacc --version | head -n1` else echo \u0026#34;yacc not found\u0026#34; fi echo -n \u0026#34;Coreutils: \u0026#34;; chown --version | head -n1 | cut -d\u0026#34;)\u0026#34; -f2 diff --version | head -n1 find --version | head -n1 gawk --version | head -n1 if [ -h /usr/bin/awk ]; then echo \u0026#34;/usr/bin/awk -\u0026gt; `readlink -f /usr/bin/awk`\u0026#34;; elif [ -x /usr/bin/awk ]; then echo awk is `/usr/bin/awk --version | head -n1` else echo \u0026#34;awk not found\u0026#34; fi gcc --version | head -n1 g++ --version | head -n1 grep --version | head -n1 gzip --version | head -n1 cat /proc/version m4 --version | head -n1 make --version | head -n1 patch --version | head -n1 echo Perl `perl -V:version` python3 --version sed --version | head -n1 tar --version | head -n1 makeinfo --version | head -n1 # texinfo version xz --version | head -n1 echo \u0026#39;int main(){}\u0026#39; \u0026gt; dummy.c \u0026amp;\u0026amp; g++ -o dummy dummy.c if [ -x dummy ] then echo \u0026#34;g++ compilation OK\u0026#34;; else echo \u0026#34;g++ compilation failed\u0026#34;; fi rm -f dummy.c dummy Since I\u0026rsquo;m using ubuntu-server-18.04.6 lts, We\u0026rsquo;ll have to install few more packages\nsudo apt install -y g++ gcc texinfo make m4 bison Also, We need to create a symbolic link (or hard link) for /bin/sh to /bin/bash\nsudo unlink /bin/sh sudo ln -s /bin/bash /bin/sh Stage 1: NOTE: Procedures performed as root user must have the LFS env variable set FOR THE ROOT USER.\nsudo -i export LFS=/mnt/lfs # can add this to root .bashrc file Create a new partition for LFS / (root partition): 20G /boot : 200MiB /home: 9.8GiB /mnt/lfs: partition for LFS - 30GiB Install packages and patches: mkdir -v $LFS/sources chmod -v a+wt $LFS/sources cd $LFS/sources wget https://mirror-hk.koddos.net/lfs/lfs-packages/lfs-packages-11.3.tar tar -xvf lfs-packages-11.3.tar mv 11.3/* sources/ chown root:root $LFS/sources/* Create a limited directory layout: mkdir -pv $LFS/{etc,var} $LFS/usr/{bin,lib,sbin} for i in bin lib sbin; do ln -sv usr/$i $LFS/$i done ## \u0026#39;/mnt/lfs/bin\u0026#39; -\u0026gt; \u0026#39;usr/bin\u0026#39; ## \u0026#39;/mnt/lfs/lib\u0026#39; -\u0026gt; \u0026#39;usr/lib\u0026#39; ## \u0026#39;/mnt/lfs/sbin\u0026#39; -\u0026gt; \u0026#39;usr/sbin\u0026#39; case $(uname -m) in x86_64) mkdir -pv $LFS/lib64 ;; esac ## mkdir: created directory \u0026#39;/mnt/lfs/lib64\u0026#39; mkdir -pv $LFS/tools Adding LFS User: groupadd lfs useradd -s /bin/bash -g lfs -m -k /dev/null lfs Explain:\n-s /bin/bash: default shell = bash\n-g lfs: add to group lfs\n-m: create home dir for this user\n-k /dev/null: by default it will copy files from /etc/skel folder (which contains .bashrc, etc), here we override with /dev/null.\nGrant lfs full access to all\nchown -v lfs $LFS/{usr{,/*},lib,var,etc,bin,sbin,tools} case $(uname -m) in x86_64) chown -v lfs $LFS/lib64 ;; esac Setting up environment: su - lfs cat \u0026gt; ~/.bash_profile \u0026lt;\u0026lt; \u0026#34;EOF\u0026#34; exec env -i HOME=$HOME TERM=$TERM PS1=\u0026#39;\\u:\\w\\$ \u0026#39; /bin/bash EOF cat \u0026gt; ~/.bashrc \u0026lt;\u0026lt; \u0026#34;EOF\u0026#34; set +h umask 022 LFS=/mnt/lfs LC_ALL=POSIX LFS_TGT=$(uname -m)-lfs-linux-gnu PATH=/usr/bin if [ ! -L /bin ]; then PATH=/bin:$PATH; fi PATH=$LFS/tools/bin:$PATH CONFIG_SITE=$LFS/usr/share/config.site export LFS LC_ALL LFS_TGT PATH CONFIG_SITE EOF Explain:\nset +h: disable \u0026ldquo;hashall\u0026rdquo; option. This option causes the shell to remember the full path to executable commands that are run in the shell session. Switching off the hash function forces the shell to search the PATH whenever a program is to be run.As such, the shell will find the newly compiled tools in $LFS/tools/bin as soon as they are available without remembering a previous version of the same program provided by the host distro, in /usr/bin or /bin. umask 022: set default file permissions for newly created filese and directories. The mask is subtracted from the default permissions of 666 for files and 777 for directories. 022 means write permission (2) is removed from the group and others. =\u0026gt; 644 for new files, 755 for new directories. Stage 2: Build NOTE: Run as lfs user\nStage 3: NOTE:\n","date":"March 7, 2023","img":"","lang":"en","langName":"English","largeImg":"","permalink":"/hugo-theme-bootstrap-skeleton/posts/linux-from-scratch/","series":[{"title":"linux-from-scratch","url":"/hugo-theme-bootstrap-skeleton/series/linux-from-scratch/"}],"smallImg":"","tags":[],"timestamp":1678194341,"title":"Linux From Scratch"},{"authors":[],"categories":[{"title":"Deployment","url":"/hugo-theme-bootstrap-skeleton/categories/deployment/"}],"content":"Summary.\nPrerequisite Ubuntu Server 20.04 LTS Install and configure the necessary dependencies sudo apt-get update -y sudo apt-get install -y curl openssh-server ca-certificates tzdata perl sudo apt-get install -y postfix Add the GitLab package repository and install the package curl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ee/script.deb.sh | sudo bash sudo EXTERNAL_URL=\u0026#34;https://gitlab.chuhuynh.com\u0026#34; apt-get install gitlab-ee ","date":"March 5, 2023","img":"","lang":"en","langName":"English","largeImg":"","permalink":"/hugo-theme-bootstrap-skeleton/posts/deploy-gitlab-on-virtual-machines/","series":[{"title":"Gitlab","url":"/hugo-theme-bootstrap-skeleton/series/gitlab/"}],"smallImg":"","tags":[],"timestamp":1678008573,"title":"Deploy Gitlab on Virtual Machines"},{"authors":[],"categories":[],"content":"Summary.\nContent.\n","date":"March 5, 2023","img":"","lang":"en","langName":"English","largeImg":"","permalink":"/hugo-theme-bootstrap-skeleton/posts/new-post/","series":[],"smallImg":"","tags":[],"timestamp":1678007544,"title":"New Post"},{"authors":[],"categories":[{"title":"Installation","url":"/hugo-theme-bootstrap-skeleton/categories/installation/"}],"content":"This guide show you how to install on Arch Linux.\n","date":"September 6, 2022","img":"","lang":"en","langName":"English","largeImg":"","permalink":"/hugo-theme-bootstrap-skeleton/docs/installation/linux/archlinux/","series":[{"title":"Guide","url":"/hugo-theme-bootstrap-skeleton/series/guide/"}],"smallImg":"","tags":[{"title":"Linux","url":"/hugo-theme-bootstrap-skeleton/tags/linux/"},{"title":"Arch Linux","url":"/hugo-theme-bootstrap-skeleton/tags/arch-linux/"}],"timestamp":1662475343,"title":"Install on Arch Linux"},{"authors":[],"categories":[],"content":"A fast, responsive and feature-rich Hugo theme for blog and documentations site.\n","date":"September 6, 2022","img":"","lang":"en","langName":"English","largeImg":"","permalink":"/hugo-theme-bootstrap-skeleton/docs/introduction/","series":[{"title":"Guide","url":"/hugo-theme-bootstrap-skeleton/series/guide/"}],"smallImg":"","tags":[],"timestamp":1662475343,"title":"Introduction"},{"authors":[],"categories":[{"title":"Installation","url":"/hugo-theme-bootstrap-skeleton/categories/installation/"}],"content":"This guide show you how to install on Ubuntu.\n","date":"September 6, 2022","img":"","lang":"en","langName":"English","largeImg":"","permalink":"/hugo-theme-bootstrap-skeleton/docs/installation/linux/ubuntu/","series":[{"title":"Guide","url":"/hugo-theme-bootstrap-skeleton/series/guide/"}],"smallImg":"","tags":[{"title":"Linux","url":"/hugo-theme-bootstrap-skeleton/tags/linux/"},{"title":"Ubuntu","url":"/hugo-theme-bootstrap-skeleton/tags/ubuntu/"}],"timestamp":1662475343,"title":"Install on Ubuntu"},{"authors":[],"categories":[{"title":"Installation","url":"/hugo-theme-bootstrap-skeleton/categories/installation/"}],"content":"This guide show you how to install on Windows.\n","date":"September 6, 2022","img":"","lang":"en","langName":"English","largeImg":"","permalink":"/hugo-theme-bootstrap-skeleton/docs/installation/windows/","series":[{"title":"Guide","url":"/hugo-theme-bootstrap-skeleton/series/guide/"}],"smallImg":"","tags":[{"title":"Windows","url":"/hugo-theme-bootstrap-skeleton/tags/windows/"}],"timestamp":1662475343,"title":"Install on Windows"},{"authors":[{"title":"Razon Yang","url":"/hugo-theme-bootstrap-skeleton/authors/razonyang/"}],"categories":[{"title":"Image","url":"/hugo-theme-bootstrap-skeleton/categories/image/"}],"content":"Since v1.0.0-alpha.1, HBS supports much more image processing methods. Such as Crop, Fit and Fill images. You can also apply filters on an image.\nSee also Image Processing.\n","date":"July 8, 2022","img":"/hugo-theme-bootstrap-skeleton/news/2022/07/more-image-processing-methods/featured-sample.webp","lang":"en","langName":"English","largeImg":"/hugo-theme-bootstrap-skeleton/news/2022/07/more-image-processing-methods/featured-sample_huc6bcc14d597e300fd9ab4aae536c68a5_498412_500x0_resize_q75_h2_box_2.webp","permalink":"/hugo-theme-bootstrap-skeleton/news/2022/07/more-image-processing-methods/","series":[{"title":"News","url":"/hugo-theme-bootstrap-skeleton/series/news/"}],"smallImg":"/hugo-theme-bootstrap-skeleton/news/2022/07/more-image-processing-methods/featured-sample_huc6bcc14d597e300fd9ab4aae536c68a5_498412_180x0_resize_q75_h2_box_2.webp","tags":[{"title":"Crop","url":"/hugo-theme-bootstrap-skeleton/tags/crop/"},{"title":"Fit","url":"/hugo-theme-bootstrap-skeleton/tags/fit/"},{"title":"Fill","url":"/hugo-theme-bootstrap-skeleton/tags/fill/"},{"title":"Filters","url":"/hugo-theme-bootstrap-skeleton/tags/filters/"}],"timestamp":1657251287,"title":"More Image Processing Methods"},{"authors":[],"categories":[],"content":"See also README.md.\n","date":"April 17, 2022","img":"","lang":"en","langName":"English","largeImg":"","permalink":"/hugo-theme-bootstrap-skeleton/blog/readme/","series":[],"smallImg":"","tags":[{"title":"README","url":"/hugo-theme-bootstrap-skeleton/tags/readme/"}],"timestamp":1650184529,"title":"README"},{"authors":[],"categories":[],"content":"Written in Go, Hugo is an open source static site generator available under the Apache Licence 2.0. Hugo supports TOML, YAML and JSON data file types, Markdown and HTML content files and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification and support for Sass SCSS workflows.\nHugo makes use of a variety of open source projects including:\nhttps://github.com/yuin/goldmark https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper Hugo is ideal for blogs, corporate websites, creative portfolios, online magazines, single page applications or even a website with thousands of pages.\nHugo is for people who want to hand code their own website without worrying about setting up complicated runtimes, dependencies and databases.\nWebsites built with Hugo are extremely fast, secure and can be deployed anywhere including, AWS, GitHub Pages, Heroku, Netlify and any other hosting provider.\nLearn more and contribute on GitHub.\n","date":"February 28, 2019","img":"","lang":"en","langName":"English","largeImg":"","permalink":"/hugo-theme-bootstrap-skeleton/about/","series":[],"smallImg":"","tags":[],"timestamp":1551312000,"title":"About"},{"authors":[],"categories":[],"content":"","date":"January 1, 1","img":"","lang":"en","langName":"English","largeImg":"","permalink":"/hugo-theme-bootstrap-skeleton/contact/","series":[],"smallImg":"","tags":[],"timestamp":-62135596800,"title":"Contact Us"},{"authors":[],"categories":[],"content":"","date":"January 1, 1","img":"","lang":"en","langName":"English","largeImg":"","permalink":"/hugo-theme-bootstrap-skeleton/offline/","series":[],"smallImg":"","tags":[],"timestamp":-62135596800,"title":"Offline"},{"authors":[],"categories":[],"content":"","date":"January 1, 1","img":"","lang":"zh-cn","langName":"简体中文","largeImg":"","permalink":"/hugo-theme-bootstrap-skeleton/zh-cn/offline/","series":[],"smallImg":"","tags":[],"timestamp":-62135596800,"title":"Offline"},{"authors":[],"categories":[],"content":"","date":"January 1, 1","img":"","lang":"zh-cn","langName":"简体中文","largeImg":"","permalink":"/hugo-theme-bootstrap-skeleton/zh-cn/contact/","series":[],"smallImg":"","tags":[],"timestamp":-62135596800,"title":"联系我们"}]
